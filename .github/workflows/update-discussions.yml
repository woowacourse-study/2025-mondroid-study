name: Update Discussion List in README

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # schedule 트리거에서도 안전하게 owner/repo 추출
      - name: Extract owner/repo
        id: repo
        shell: bash
        run: |
          echo "owner=${GITHUB_REPOSITORY%/*}" >> "$GITHUB_OUTPUT"
          echo "repo=${GITHUB_REPOSITORY#*/}"  >> "$GITHUB_OUTPUT"

      - name: Fetch discussions via GitHub API
        id: get_discussions
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{owner}/{repo}/discussions
          owner: ${{ steps.repo.outputs.owner }}
          repo: ${{ steps.repo.outputs.repo }}
          per_page: 5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 🔹 표(헤더+rows)를 임시 파일로 생성
      - name: Build discussions table file
        shell: bash
        run: |
          set -euo pipefail
          {
            echo '| Title | Author | Comments |'
            echo '|-------|--------|----------|'
            # jq 필터는 '싱글쿼트'로 감싸서 \(.field) 를 쉘이 건드리지 않게 함
            jq -r '.[] | "| [\(.title | gsub("[|\r\n]"; " "))](\(.html_url)) | \(.user.login) | \(.comments)"' \
              <<< '${{ steps.get_discussions.outputs.data }}'
          } > /tmp/discussions_table.md

      # 🔹 README의 마커 사이만 교체 (마커는 그대로 유지)
      - name: Replace discussions block in README.md
        shell: bash
        run: |
          set -euo pipefail
          awk '
            /<!-- discussions-list-start -->/ { print; system("cat /tmp/discussions_table.md"); in=1; next }
            /<!-- discussions-list-end -->/   { print; in=0; next }
            !in { print }
          ' README.md > README.tmp.md
          mv README.tmp.md README.md

      - name: Commit and push updated README
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          if ! git diff --cached --quiet; then
            git commit -m "Update Discussions list"
            git push
          else
            echo "No changes to commit"
          fi
