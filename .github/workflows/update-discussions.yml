name: Update Discussion List in README

on:
  schedule:
    - cron: "0 * * * *"   # 매 1시간
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract owner/repo
        id: repo
        run: |
          echo "owner=${GITHUB_REPOSITORY%/*}" >> "$GITHUB_OUTPUT"
          echo "repo=${GITHUB_REPOSITORY#*/}" >> "$GITHUB_OUTPUT"

      - name: Fetch discussions via GitHub API
        id: get_discussions
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{owner}/{repo}/discussions
          owner: ${{ steps.repo.outputs.owner }}
          repo: ${{ steps.repo.outputs.repo }}
          per_page: 5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Discussions list markdown
        id: generate_md
        shell: bash
        run: |
          set -euo pipefail

          # jq 필터는 반드시 '싱글쿼트'로 감싸기
          rows="$(printf '%s' "${{ steps.get_discussions.outputs.data }}" \
            | jq -r '.[] | "| [\(.title)](\(.html_url)) | \(.user.login) | \(.comments)"')"

          # 출력 블록을 한 번에 기록 (중간 실패로 EOF 짤림 방지)
          {
            echo 'discussions<<EOF'
            echo '<!-- discussions-list-start -->'
            echo
            echo '| Title | Author | Comments |'
            echo '|-------|--------|----------|'
            printf '%s\n' "$rows"
            echo
            echo '<!-- discussions-list-end -->'
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Replace discussions list in README.md
        shell: bash
        run: |
          set -euo pipefail
          # 마커 사이만 새 블록으로 교체
          awk -v newblk='${{ steps.generate_md.outputs.discussions }}' '
            BEGIN{inblk=0}
            /<!-- discussions-list-start -->/ {print; print newblk; inblk=1; next}
            /<!-- discussions-list-end -->/   {print; inblk=0; next}
            !inblk {print}
          ' README.md > README.tmp.md
          mv README.tmp.md README.md

      - name: Commit and push updated README
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          if ! git diff --cached --quiet; then
            git commit -m "Update Discussions list"
            git push
          else
            echo "No changes to commit"
          fi
