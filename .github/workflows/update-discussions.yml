name: Update Discussion List in README

on:
  schedule:
    - cron: "0 * * * *"   # 매 1시간
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract owner/repo (schedule 트리거 안전)
        id: repo
        shell: bash
        run: |
          echo "owner=${GITHUB_REPOSITORY%/*}" >> "$GITHUB_OUTPUT"
          echo "repo=${GITHUB_REPOSITORY#*/}"  >> "$GITHUB_OUTPUT"

      - name: Fetch discussions via GitHub API
        id: get_discussions
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{owner}/{repo}/discussions
          owner: ${{ steps.repo.outputs.owner }}
          repo:  ${{ steps.repo.outputs.repo }}
          per_page: 5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Discussions list markdown (rows only)
        id: rows
        shell: bash
        run: |
          set -euo pipefail
          # outputs.data 를 here-string(<<<) 으로 jq에 안전 전달
          rows="$(jq -r '.[] |
            # 제목 내 | 또는 개행은 표 깨짐 방지
            "| [\(.title | gsub("\\||\\n"; " "))](\(.html_url)) | \(.user.login) | \(.comments)"' \
            <<< '${{ steps.get_discussions.outputs.data }}')"
          # 멀티라인 아웃풋을 한 번에 $GITHUB_OUTPUT에 안전 기록
          {
            echo 'discussions<<EOF'
            echo '<!-- discussions-list-start -->'
            echo
            echo '| Title | Author | Comments |'
            echo '|-------|--------|----------|'
            printf '%s\n' "$rows"
            echo
            echo '<!-- discussions-list-end -->'
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Replace discussions list in README.md
        shell: bash
        run: |
          set -euo pipefail
          awk -v newblk='${{ steps.rows.outputs.discussions }}' '
            BEGIN{inblk=0}
            /<!-- discussions-list-start -->/ { print; print newblk; inblk=1; next }
            /<!-- discussions-list-end -->/   { print; inblk=0;  next }
            !inblk { print }
          ' README.md > README.tmp.md
          mv README.tmp.md README.md

      - name: Commit and push updated README
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          if ! git diff --cached --quiet; then
            git commit -m "Update Discussions list"
            git push
          else
            echo "No changes to commit"
          fi
