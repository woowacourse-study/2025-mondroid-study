name: Update Discussion List in README

on:
  schedule:
    - cron: "0 * * * *"   # 매 1시간
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # schedule 트리거에서도 안전하게 owner/repo 추출
      - name: Extract owner/repo
        id: repo
        shell: bash
        run: |
          echo "owner=${GITHUB_REPOSITORY%/*}" >> "$GITHUB_OUTPUT"
          echo "repo=${GITHUB_REPOSITORY#*/}"  >> "$GITHUB_OUTPUT"

      - name: Fetch discussions via GitHub API
        id: get_discussions
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{owner}/{repo}/discussions
          owner: ${{ steps.repo.outputs.owner }}
          repo:  ${{ steps.repo.outputs.repo }}
          per_page: 5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 표 파일 생성 (헤더 + rows). $GITHUB_OUTPUT/EOF/echo 파이프 안 씀
      - name: Build discussions table file
        shell: bash
        run: |
          set -euo pipefail
          {
            echo '| Title | Author | Comments |'
            echo '|-------|--------|----------|'
            # jq 필터는 '싱글쿼트'로 감싸서 \(.field)를 쉘이 해석하지 못하게 함
            jq -r '.[] |
              "| [\(.title | gsub("[|\r\n]"; " "))](\(.html_url)) | \(.user.login) | \(.comments)"
            ' <<< '${{ steps.get_discussions.outputs.data }}'
          } > /tmp/discussions_table.md

      # README의 마커 사이만 Python으로 안전하게 교체 (awk/system/heredoc 없음)
      - name: Replace discussions block in README.md
        shell: bash
        run: |
          set -euo pipefail

          # Python 스크립트를 파일로 저장
          cat >/tmp/replace_discussions.py <<'PY'
import re, sys

README = 'README.md'
TABLE  = '/tmp/discussions_table.md'

with open(README, 'r', encoding='utf-8') as f:
    readme = f.read()
with open(TABLE, 'r', encoding='utf-8') as f:
    body = f.read().strip()

pattern = r"(<!-- discussions-list-start -->)(.*?)(<!-- discussions-list-end -->)"
new     = r"\1\n" + body + r"\n\3"

out, n = re.subn(pattern, new, readme, flags=re.S)
if n == 0:
    print("ERROR: markers not found in README.md", file=sys.stderr)
    sys.exit(1)

with open(README, 'w', encoding='utf-8') as f:
    f.write(out)

print("Replaced block successfully.")
PY

          # 실행
          python3 /tmp/replace_discussions.py

      - name: Commit and push
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          if ! git diff --cached --quiet; then
            git commit -m "Update Discussions list"
            git push
          else
            echo "No changes to commit"
          fi
